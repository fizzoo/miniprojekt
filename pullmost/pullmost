#!/bin/zsh

TMPPULL=/tmp/pullmost-pull
TMPSTAT=/tmp/pullmost-status

# arg 2 is color to tput, arg 1 string
pprint () {
    tput bold
    tput setab $2
    printf "%-80s" $1
    tput op
    tput sgr0
    printf "\n"
}

# Try to pull a directory, and then print status.
# Should be in the right directory when calling this func.
trypull () {
    # Check if it has no remote tracking branches, nothing to do in
    # that case.
    if [[ -z $(git branch -r) ]]; then
        return
    fi

    # basename of dir
    local cwd=${PWD##*/}
    local pull=$TMPPULL-$cwd
    local stat=$TMPSTAT-$cwd

    { git pull 2>&1 } > $pull
    grep "Already up to date." $pull >/dev/null
    local s1=$?

    { git status 2>&1 } > $stat
    grep "nothing to commit, " $stat >/dev/null
    local s2=$?

    if [[ $s1 == 0 && $s2 == 0 ]]; then
        pprint "${cwd}!" 2
    else
        pprint "${cwd}:" 1
        cat $pull
        echo
        cat $stat
        echo
    fi

    rm $pull $stat
}

# cd to arg 1 if given
if [[ ! -z $1 ]]; then; cd $1; fi

for i in *; do
    # Do nothing if it is not a directory, or the directory is not git.
    if [[ ! -d $i/.git ]]; then; continue; fi

    cd $i
    trypull
    cd ..
done
